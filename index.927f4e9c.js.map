{"mappings":"ACIA,IAAM,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAkB,SAAS,aAAa,CAAC,kBAEzC,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAQ,EAAM,OAAO,CAAC,EAAE,CAE9B,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAa,QAAQ,EACvB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIA,IAAM,EAAU,EAAM,gBAAgB,CAEtC,EAAM,MAAM,CAAC,EAAQ,SAAS,CAAC,CAAA,IAEL,KAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAa,QAAQ,EACvB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAMA,AAFgB,EAAM,gBAAgB,CAE9B,MAAM,GAEY,IAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAgB,QAAQ,EAC1B,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAIK,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAyB,CAAzB,IAAM,EAAN,EAAA,KAAA,CACG,EAAW,EAAI,gBAAgB,CAErC,EAAI,MAAM,CAAC,EAAS,SAAS,CAAC,CAAA,GAChC,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAM8B,KAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAgB,QAAQ,EAC1B,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAIK,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAGH,AAFiB,AADd,EAAA,KAAA,CACkB,gBAAgB,CAE5B,MAAM,E,C,M,E,CAHZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAM8B,IAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar appendColumnBtn = document.querySelector(\".append-column\");\nvar removeColumnBtn = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\".field\");\nvar tbody = table.tBodies[0];\nappendRowBtn.addEventListener(\"click\", function() {\n    if (removeRowBtn.disabled) removeRowBtn.disabled = false;\n    var lastRow = tbody.lastElementChild;\n    tbody.append(lastRow.cloneNode(true));\n    if (table.rows.length === 10) appendRowBtn.disabled = true;\n});\nremoveRowBtn.addEventListener(\"click\", function() {\n    if (appendRowBtn.disabled) appendRowBtn.disabled = false;\n    var lastRow = tbody.lastElementChild;\n    lastRow.remove();\n    if (table.rows.length === 2) removeRowBtn.disabled = true;\n});\nappendColumnBtn.addEventListener(\"click\", function() {\n    if (removeColumnBtn.disabled) removeColumnBtn.disabled = false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            var lastCell = row.lastElementChild;\n            row.append(lastCell.cloneNode(true));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (table.rows[0].cells.length === 10) appendColumnBtn.disabled = true;\n});\nremoveColumnBtn.addEventListener(\"click\", function() {\n    if (appendColumnBtn.disabled) appendColumnBtn.disabled = false;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            var lastCell = row.lastElementChild;\n            lastCell.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (table.rows[0].cells.length === 2) removeColumnBtn.disabled = true;\n});\n\n//# sourceMappingURL=index.927f4e9c.js.map\n","'use strict';\n\n// write code here\n\nconst appendRowBtn = document.querySelector('.append-row');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst appendColumnBtn = document.querySelector('.append-column');\nconst removeColumnBtn = document.querySelector('.remove-column');\n\nconst table = document.querySelector('.field');\nconst tbody = table.tBodies[0];\n\nappendRowBtn.addEventListener('click', () => {\n  if (removeRowBtn.disabled) {\n    removeRowBtn.disabled = false;\n  }\n\n  const lastRow = tbody.lastElementChild;\n\n  tbody.append(lastRow.cloneNode(true));\n\n  if (table.rows.length === 10) {\n    appendRowBtn.disabled = true;\n  }\n});\n\nremoveRowBtn.addEventListener('click', () => {\n  if (appendRowBtn.disabled) {\n    appendRowBtn.disabled = false;\n  }\n\n  const lastRow = tbody.lastElementChild;\n\n  lastRow.remove();\n\n  if (table.rows.length === 2) {\n    removeRowBtn.disabled = true;\n  }\n});\n\nappendColumnBtn.addEventListener('click', () => {\n  if (removeColumnBtn.disabled) {\n    removeColumnBtn.disabled = false;\n  }\n\n  for (const row of table.rows) {\n    const lastCell = row.lastElementChild;\n\n    row.append(lastCell.cloneNode(true));\n  }\n\n  if (table.rows[0].cells.length === 10) {\n    appendColumnBtn.disabled = true;\n  }\n});\n\nremoveColumnBtn.addEventListener('click', () => {\n  if (appendColumnBtn.disabled) {\n    appendColumnBtn.disabled = false;\n  }\n\n  for (const row of table.rows) {\n    const lastCell = row.lastElementChild;\n\n    lastCell.remove();\n  }\n\n  if (table.rows[0].cells.length === 2) {\n    removeColumnBtn.disabled = true;\n  }\n});\n"],"names":["appendRowBtn","document","querySelector","removeRowBtn","appendColumnBtn","removeColumnBtn","table","tbody","tBodies","addEventListener","disabled","lastRow","lastElementChild","append","cloneNode","rows","length","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","lastCell","err","return","cells"],"version":3,"file":"index.927f4e9c.js.map"}